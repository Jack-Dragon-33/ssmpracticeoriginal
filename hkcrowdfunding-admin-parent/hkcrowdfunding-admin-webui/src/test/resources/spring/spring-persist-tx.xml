<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <context:component-scan base-package="com.hk.crowd.service"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--        装配数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
<!--    配置切面-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* *..*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
<!--        配置事务属性-->
        <tx:attributes>
<!--            配置只读属性，让数据库知道这是一个查询操作，能够进行一定的优化-->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
<!--            增删改方法:配置传播行为、回滚异常
                propagation 属性:REQUIRED:默认值，表示方法必须工作在事务中，如果当前线程上没有已经开启的事务则自己开启新事务。如果已经有了，那么就使用已有的事务。
                                           坏处：用别人的事务有可能被回滚
                                REQUIRES_NEW:表示方法必须工作在事务中，如果当前线程上没有已经开启的事务则自己开启新事务。就算是已经有了，也在自己开启事务中运行。
                                            好处：不会受到其它事务回滚的影响。
                rollback-for:配置事务方法针对什么样的异常回滚，默认是运行时异常
-->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>
</beans>